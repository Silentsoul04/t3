version: "3.5"

services:

  t3:
    hostname: t3
    container_name: t3
    image: alpine:latest
    links: ["splunk"]
    volumes: ["./sh:/tmp"]
    command: ["/tmp/welcome.sh"]
  
  console:
    hostname: console
    container_name: console
    image: dannyben/madness
    ports: ["2222:3000"]
    volumes: ["./console:/docs"]

  bwapp:
    hostname: bwapp
    container_name: bwapp
    image: raesene/bwapp
    ports: ["3333:80"]
    volumes:
      - ./logs/bwapp:/var/log/apache2
      - ./conf/.bashrc:/root/.bashrc
      - ./conf/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./sh:/sh
    command: ["/sh/dumpio.sh", "/run.sh"]


  dvwa:
    hostname: dvwa
    container_name: dvwa
    image: imfht/dvwa-nologin
    ports: ["4444:80"]
    volumes:
      - ./logs/dvwa:/var/log/apache2
      - ./conf/.bashrc:/root/.bashrc
      - ./conf/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./sh:/sh
    command: ["/sh/dumpio.sh", "/run.sh"]

  clone:
    hostname: clone
    container_name: clone
    image: nginx:latest
    ports: ["5555:80"]
    depends_on: ["bwapp","dvwa"]
    volumes:
      - ./clone:/usr/share/nginx/html
      - ./logs/clone:/var/log/nginx/
      - ./conf/.bashrc:/root/.bashrc
      - ./conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./sh:/sh
    command: ["/sh/setup.sh", "nginx", "-g", "daemon off;"]

  triage:
    hostname: triage
    container_name: triage
    image: nginx:latest
    ports: ["7777:80"]
    depends_on: ["bwapp","dvwa"]
    volumes: ["./triage:/usr/share/nginx/html"]
    
  splunk:
    hostname: splunk
    container_name: splunk
    image: splunk/splunk:latest
    environment: ["SPLUNK_START_ARGS=--accept-license"]
    ports: ["8000:8000","9997:9997"]
    volumes: ["./splunk/default.yml:/tmp/defaults/default.yml","./logs:/var/log"]

  shell:
    hostname: shell
    container_name: shell
    build:
      context: ./docker-shell
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /sh:/sh
    ports: ["9009:8888"]

  faker:
    hostname: faker
    container_name: faker
    build:
      context: ./soc-faker
    volumes: ["./logs/clone:/app/logs"]
    command: ["/app/bin/createAccessLogs.py", "/app/bin/securitylab.github.com_PATHS.txt", "5", "10"]
